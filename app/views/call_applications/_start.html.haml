- # new records always submit 'start' and try to move to next step on successful initial save
- # persised records always submit to @next_step and creation_status is updated after other params udpate if it's a forward progression

.form-inputs
  - url = @call_application.persisted? ? wizard_path(@next_step, call_application_id: @call_application.id) : "/call_applications?call_id=#{@call_application.call_id}"

  = simple_form_for @call_application, url: url do |f|
    = f.error_notification
    = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

    .d-none= f.input :call_id, input_html: { class: 'form-control' }, label: false

    - def @call_application.call_application_id; id; end
    .d-none= f.input :call_application_id, input_html: { class: 'form-control' }, label: false

    - if current_user.nil?
      = f.simple_fields_for :user do |user|
        = render 'user_fields', f: user

    .row
      .col-6
        = f.input :artist_website, wrapper: :vertical_input_group, label: "Artist Website" do
          .input-group-prepend
            .input-group-text
              %span.fa.fa-globe
          = f.input_field :artist_website, class: "form-control"
          = render 'application/forms/url_validation_error_modifier', f: f, attr_name: :artist_website

        = f.input :artist_instagram_url, wrapper: :vertical_input_group, label: "Instagram URL" do
          .input-group-prepend
            .input-group-text
              %span.fa.fa-globe
          = f.input_field :artist_instagram_url, class: "form-control"
          = render 'application/forms/url_validation_error_modifier', f: f, attr_name: :artist_instagram_url

        - if @call.categories.any?
          .row
            .col-12
              - categories = @call.categories.to_a
              - categories << @call_application.category if @call_application.category
              = f.input :category_id, collection: categories.uniq, include_blank: @call_application.new_record?

      .col-md-6
        .form-group
          %label{ for: 'call_application_artist_statement' } Artist Statement
          .trix-md= f.input :artist_statement, input_html: { class: 'form-control' }, label: false, as: :trix_editor
          - if @call_application.errors[:artist_statement].any?
            - @call_application.errors[:artist_statement].each do |error_msg|
              .text-danger= error_msg

    .row
      .col-12
        .pull-right= f.button :submit, 'Continue', class: 'btn btn-primary'
