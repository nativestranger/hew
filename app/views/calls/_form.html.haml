.form-inputs
  = simple_form_for @call do |f|
    = f.error_notification
    = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

    .row
      .col-6
        .form-group
          %label{ for: 'call_name' }= t('name')
          = f.input :name, input_html: { class: 'form-control' }, label: false
      .col-6
        .form-group
          = f.input :call_type_id, collection: options_for_enum(Call, :call_type_id)
    .row
      .col-lg-3
        .form-group
          %label Start Date
          = f.input :start_at, as: :tempus_dominus, input_html: { class: 'date' }, label: false
      .col-lg-3
        .form-group
          %label End Date
          = f.input :end_at, as: :tempus_dominus, input_html: { class: 'date' }, label: false
      .col-lg-3
        .form-group
          %label Entry Deadline
          - @call.entry_deadline = @call.get_entry_deadline_in_zone
          = f.input :entry_deadline, as: :tempus_dominus, input_html: { class: 'datetime_local' }, label: false
      .col-lg-3
        .form-group
          %label Time Zone
          = f.select :time_zone, time_zone_options_for_select(selected: f.object.time_zone), { include_blank: false }, { class: 'form-control' }

    .row
      .col-md-12
        .form-group
          = f.label 'Categories'
          #select2_call_category_ids= f.select :category_ids, category_options, { include_blank: true }, { multiple: true, class: 'form-control' }

    .row
      .col-md-12
        .form-group
          %label{ for: 'call_description' } Description
          -# TODO: partial for this
          - if f.object.errors[:description].any?
            - f.object.errors[:description].each do |err|
              %p.mt-0.text-danger= err
          = f.input :description, input_html: { class: 'form-control' }, label: false, as: :trix_editor

      .row.no-gutters
        .col-md-4.col-4.p-0
          .form-check.pl-0
            = f.input :is_public, label: false, input_html: { "data-toggle" => "toggle", "data-on" => "Public", "data-off" => "Private", "data-size" => "sm", "data-onstyle" => "light" }

        - if current_user.is_admin?
          .col-md-4.col-4.p-0
            .form-check.pl-0
              = f.input :external, label: false, input_html: { "data-toggle" => "toggle", "data-on" => "External", "data-off" => "Internal", "data-size" => "sm", "data-onstyle" => "light" }
          .col-md-4.col-4.p-0
            .form-check.pl-0
              = f.input :is_approved, label: false, input_html: { "data-toggle" => "toggle", "data-on" => "Approved", "data-off" => "Pending", "data-size" => "sm", "data-onstyle" => "light" }

    %hr

    .row.external-calls-only
      .col-12
        = f.input :external_url, wrapper: :vertical_input_group, label: "External URL" do
          .input-group-prepend
            .input-group-text
              %span.fa.fa-globe
          = f.input_field :external_url, class: "form-control"
          = render 'application/forms/url_validation_error_modifier', f: f, attr_name: :external_url

    .row.internal-calls-only
      .col
        %h4 Application Details

    .row.internal-calls-only
      .col-md-12
        .form-group
          -# %label{ for: 'entry_details' }
          %sm.text-muted What should Artists include when applying?
          - if f.object.errors[:entry_details].any?
            - f.object.errors[:entry_details].each do |err|
              %p.mt-0.text-danger= err
          .mt-2= f.input :entry_details, input_html: { class: 'form-control' }, label: false, as: :trix_editor

    #venue_fields
      %hr

      .row
        .col-md-12
          %h4 Venue Details
          = f.simple_fields_for :venue do |venue|
            = render '/venues/venue_fields', f: venue

    .row
      .col-md-2
        = f.button :submit, t('save'), class: 'btn btn-primary'
